[tool.ruff]
line-length = 210 # it's python, I don't care
indent-width = 2
src = ["src", "test"] # Allow imports relative to the "src" and "test" directories.
#not-in-test = false

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
docstring-code-format = true #false
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = [] #["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
task-tags = ["TODO", "FIXME", "Q", "BUG", "NB"]
ignore = [
	"E262", # no-space-after-inline-comment
	"E713",
	"F403",
	"E401",
	"E714", # `${value} is not` instead of `not ${value} is`
	"E722",
	"E741", # Ambiguous var name (I'm a Golang man)
	"F405", # Warns when using anything from start imports. Useless (unless developing a library), because when something is not defined at all, it's an error.
	#  # Line length regulated by formatter
	"E501",
	#  # pydocstyle: http://www.pydocstyle.org/en/stable/error_codes.html
	"D401", # Relax NumPy docstring convention: First line should be in imperative mood
	#  # flake8-pytest-style:
	"PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
	#  # flake8-simplify
	"SIM102", # Use a single `if` statement instead of nested `if` statements
	"SIM108", # Use ternary operator
	#  # ruff
	"RUF005", # unpack-instead-of-concatenating-to-collection-literal
	#  # pycodestyle
	#  # TODO: Remove errors below to further improve docstring linting

	# Ordered from most common to least common errors.
	"D105", # Missing docstring in magic method
	"D100", # Missing docstring in public module
	"D104", # Missing docstring in public package
	# flake8-todos
	"TD002", # Missing author in TODO
	"TD003", # Missing issue link on the line following this TODO
	# tryceratops
	"TRY003", # Avoid specifying long messages outside the exception class
	# Lints below are turned off because of conflicts with the ruff formatter
	"D206",
	"W191",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D100", "D103", "B018", "FBT001"]

#
[tool.ruff.lint.pydocstyle]
convention = "numpy"
