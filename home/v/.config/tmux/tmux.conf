# ooooooooooooo                                           
# 8'   888   `8                                           
#      888      ooo. .oo.  .oo.   oooo  oooo  oooo    ooo 
#      888      `888P"Y88bP"Y88b  `888  `888   `88b..8P'  
#      888       888   888   888   888   888     Y888'    
#      888       888   888   888   888   888   .o8"'88b   
#     o888o     o888o o888o o888o  `V88V"V8P' o88'   888o 


# move pane across the windows
bind-key C-n swap-pane -s :+.top \; rotate-window -Ut :+# 

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?nvim$'"
not_popup='#{!=:#S,popup}'

# COMPATABILITY {{{
#set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB:sitm=\E[3m:cstyle"
set -sg terminal-overrides ",*:RGB"
set -ga terminal-features ",alacritty:usstyle"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# }}}
# MISC OPTIONS {{{

set -g detach-on-destroy off  # open existing session when closing last window
set -s escape-time 0          # remove delay for escape
set -g status-keys emacs      # allows esc key to exit commandline mode
set -g renumber-windows on    # stop new tabs appearing behind last
set -g history-limit 10000    # store 10,000 lines of scrollback
set -g wrap-search off
set-option -g focus-events on


# }}}
# MOUSE {{{

set -g mouse on
unbind -n DoubleClick1Pane # stop double click leaking through program
unbind -n MouseDown3Pane   # remove default right-click context menu
bind -n MouseDown2Pane if -F "#{mouse_any_flag}" "send-keys -M MouseDown2" pasteb

# }}}
# TITLE {{{

set -g set-titles on
set -g set-titles-string "#T"

# }}}
# POPUP WINDOWS {{{

set -g popup-border-style "fg=colour236"
set -g pane-border-style "fg=colour236"
set -g pane-active-border-style 'fg=colour236'
set -g popup-border-lines single

# }}}
# STATUS LINE {{{

set -g status-interval 30
set -g status-style ""
set -g message-style "bg=colour234"
set -g message-command-style "bg=colour234"
set -g status-right ""

# }}}
# MODE STYLE {{{

set -g mode-style 'fg=terminal,bg=colour235'

# }}}
# SEARCH STYLE {{{

set -g copy-mode-match-style 'bg=colour234'
set -g copy-mode-current-match-style 'fg=brightyellow,bg=colour234'
set -g copy-mode-mark-style 'fg=black,bg=white'

# }}}
# KEYBINDS {{{

unbind-key C-b
set-option -g prefix C-e
bind-key C-e send-prefix
set-window-option -g mode-keys vi

# NAVIGATION

bind-key v last-window # selects last opened window. Key is chosen in correspondence with my current chrome (vimium) setup
bind-key 9 run-shell "tmux select-window -t \$(tmux list-windows | tail -1 | awk '{print \$1}' | sed 's/://')" # open last window. Also mimics chrome


bind-key M-c send-keys -R \; clear-history
bind M-b if -F $not_popup 'break-pane' \
    'run "tmux break-pane -t $(tmux display -p #{popup_last_session})"'

# KILL
unbind &
bind x kill-pane
bind X kill-window
bind M-x kill-session


# SWAPPING
bind H splitw -fhb \; swapp -t ! \; killp -t !
bind J splitw -fv  \; swapp -t ! \; killp -t !
bind K splitw -fvb \; swapp -t ! \; killp -t !
bind L splitw -fh  \; swapp -t ! \; killp -t !
bind h select-pane -L \; swapp -t "{right-of}"
bind j select-pane -D \; swapp -t "{up-of}"
bind k select-pane -U \; swapp -t "{down-of}"
bind l select-pane -R \; swapp -t "{left-of}"

bind -r s select-pane -L
bind -r r select-pane -D
bind -r n select-pane -U
bind -r t select-pane -R

bind -r l previous-window
bind -r h next-window
bind -r u swap-window -t -1 \; previous-window
bind -r y swap-window -t +1 \; next-window
#TODO: U and Y for max move

bind i choose-tree -Zs
#TODO!: make `x` and `M-x` kill session from tree-mode, and without confirmation
#TODO!: rebind movement to srnt and put expansion of the tree from l and h to just e toggle


# COPY MODE
bind -n M-v copy-mode
bind -T copy-mode-vi u send -X halfpage-up
bind -T copy-mode-vi d send -X halfpage-down
bind -T copy-mode-vi M-u send -X halfpage-up
bind -T copy-mode-vi M-d send -X halfpage-down
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"
bind -T copy-mode-vi t send-keys -X copy-pipe "pbcopy"
bind -T copy-mode-vi Escape if-shell -F '#{selection_present}' \
                                        'send-keys -X clear-selection' \
                                        'send-keys -X cancel'
bind -T copy-mode-vi g switch-client -T visual-g

bind -T visual-g g send -X history-top

bind -T visual-g m send -X next-matching-bracket

bind -T copy-mode-vi / command-prompt -T search -i -p "/" \
    "send -X search-forward-incremental \"%%%\""
bind -T copy-mode-vi ? command-prompt -T search -i -p "?" \
    "send -X search-backward-incremental \"%%%\""

# MISC
bind    M-s source ~/.config/tmux/tmux.conf
bind    M-l if -F $not_popup 'switch-client -l'
bind    M-f if -F $not_popup 'choose-tree -s -Z'

bind    m   if -F $not_popup 'command-prompt -I "join-pane -v -t "'
bind    M   if -F $not_popup 'command-prompt -I "join-pane -h -t "'

bind    A   if -F $not_popup 'command-prompt -I "rename-session "'
bind    a   if -F $not_popup 'command-prompt -I "rename-window "'
# }}}

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-yank' # This is fucking retarded
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
# Initialize TMUX plugin manager. NB: should be at the bottom!
run '~/.config/tmux/plugins/tpm/tpm'
